package site.easy.to.build.crm.service.property;

import site.easy.to.build.crm.entity.Property;

import java.time.LocalDate;
import java.util.List;
import java.util.Optional;

public interface PropertyService {

    Property findById(Long id);
    
    Optional<Property> findByPayPropId(String payPropId);
    
    Optional<Property> findByCustomerId(String customerId);
    
    List<Property> findByPropertyOwnerId(Integer propertyOwnerId);
    
    List<Property> findByStatus(String status);
    
    List<Property> findByPropertyType(String propertyType);
    
    List<Property> findByCity(String city);
    
    List<Property> findByPostcode(String postcode);
    
    List<Property> findActiveProperties();
    
    List<Property> findPropertiesWithPaymentsAllowed();
    
    List<Property> findPropertiesRequiringApproval();
    
    List<Property> findPropertiesByBedrooms(Integer bedrooms);
    
    List<Property> findPropertiesByFurnished(String furnished);
    
    List<Property> searchByPropertyName(String propertyName);
    
    List<Property> searchByAddress(String address);
    
    List<Property> findPropertiesWithUpcomingExpiry(LocalDate date);
    
    List<Property> getRecentProperties(Long userId, int limit);
    
    List<Property> searchProperties(String propertyName, String city, String postcode, 
                                   String status, String propertyType, Integer bedrooms, int limit);
    
    List<Property> findAll();
    
    Property save(Property property);
    
    void delete(Property property);
    
    void deleteById(Long id);
    
    long countByStatus(String status);
    
    long countByCreatedBy(Long userId);
    
    long getTotalProperties();
    
    // Business logic methods
    boolean isPropertyAvailable(Long propertyId);
    
    void markPropertyAsLet(Long propertyId);
    
    void markPropertyAsVacant(Long propertyId);
    
    List<Property> findVacantProperties();
    
    List<Property> findLetProperties();
}