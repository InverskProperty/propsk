# PayProp API Specification - Updated for OAuth2 Integration
# Based on your existing implementation with OAuth2 enhancements

payprop:
  enabled: true
  api:
    base-url: "https://ukapi.staging.payprop.com/api/agency/v1.1"
  oauth2:
    client-id: "Propsk"
    client-secret: "L7GJfqHWduV9IdU7"
    authorization-url: "https://ukapi.staging.payprop.com/oauth/authorize"
    token-url: "https://ukapi.staging.payprop.com/oauth/access_token"
    redirect-uri: "http://localhost:8080/api/payprop/oauth/callback"
    scopes: "read:export:beneficiaries read:export:tenants read:export:properties write:entity:tenant write:entity:property write:entity:beneficiary"
  webhook:
    enabled: true
    secret: "your-webhook-secret"
    base-url: "http://localhost:8080/api/payprop/webhook"

---
# API Endpoints Your Current Implementation Uses

# Properties API
/entity/property:
  post:
    summary: Create property in PayProp
    description: Creates a new property with all your existing DTO mapping
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PayPropPropertyDTO'
    responses:
      200:
        description: Property created successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: PayProp hashed property ID

/entity/property/{external_id}:
  put:
    summary: Update property in PayProp
    parameters:
      - name: external_id
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PayPropPropertyDTO'

# Tenants API  
/entity/tenant:
  post:
    summary: Create tenant in PayProp
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PayPropTenantDTO'
    responses:
      200:
        description: Tenant created successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: PayProp hashed tenant ID

/entity/tenant/{external_id}:
  put:
    summary: Update tenant in PayProp
    parameters:
      - name: external_id
        in: path
        required: true
        schema:
          type: string

# Beneficiaries API
/entity/beneficiary:
  post:
    summary: Create beneficiary (property owner) in PayProp
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PayPropBeneficiaryDTO'

# Export APIs (for bulk sync)
/export/properties:
  get:
    summary: Export all properties with pagination
    parameters:
      - name: page
        in: query
        schema:
          type: integer
          default: 1
      - name: rows
        in: query
        schema:
          type: integer
          maximum: 25
          default: 25
    responses:
      200:
        description: Paginated properties list
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/PayPropProperty'
                pagination:
                  $ref: '#/components/schemas/Pagination'

/export/tenants:
  get:
    summary: Export all tenants with pagination
    parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: rows
        in: query
        schema:
          type: integer
          maximum: 25

/export/beneficiaries:
  get:
    summary: Export all beneficiaries with pagination
    parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: rows
        in: query
        schema:
          type: integer
          maximum: 25

# Tags API (for your portfolio sync)
/tags:
  get:
    summary: Get all tags
    responses:
      200:
        description: List of tags
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/PayPropTag'
  post:
    summary: Create new tag
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PayPropTagDTO'

/tags/{external_id}:
  get:
    summary: Get specific tag
    parameters:
      - name: external_id
        in: path
        required: true
        schema:
          type: string

/tags/entities/{entity_type}/{entity_id}:
  post:
    summary: Link tags with entity (for portfolio sync)
    parameters:
      - name: entity_type
        in: path
        required: true
        schema:
          type: string
          enum: [property, tenant, beneficiary]
      - name: entity_id
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              tags:
                type: array
                items:
                  type: string

# Credit Check API (new functionality from spec)
/entity/tenant-credit-check:
  post:
    summary: Request tenant credit check
    requestBody:
      required: true
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/SouthAfricanIDCreditCheck'
              - $ref: '#/components/schemas/PassportCreditCheck'
              - $ref: '#/components/schemas/BusinessCreditCheck'
            discriminator:
              propertyName: identity_type

# OAuth2 Endpoints
/oauth/authorize:
  get:
    summary: OAuth2 authorization endpoint
    parameters:
      - name: response_type
        in: query
        required: true
        schema:
          type: string
          enum: [code]
      - name: client_id
        in: query
        required: true
        schema:
          type: string
      - name: redirect_uri
        in: query
        required: true
        schema:
          type: string
      - name: scope
        in: query
        schema:
          type: string
      - name: state
        in: query
        schema:
          type: string

/oauth/access_token:
  post:
    summary: Exchange authorization code for access token
    requestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              code:
                type: string
              client_id:
                type: string
              client_secret:
                type: string
              redirect_uri:
                type: string
              grant_type:
                type: string
                enum: [authorization_code, refresh_token]
              refresh_token:
                type: string
    responses:
      200:
        description: Access token response
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token:
                  type: string
                refresh_token:
                  type: string
                token_type:
                  type: string
                  enum: [Bearer]
                expires_in:
                  type: integer

components:
  schemas:
    PayPropPropertyDTO:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          maxLength: 255
        customer_id:
          type: string
          maxLength: 50
        customer_reference:
          type: string
          maxLength: 50
        agent_name:
          type: string
          maxLength: 50
        notes:
          type: string
          maxLength: 60000
        address:
          $ref: '#/components/schemas/PayPropAddressDTO'
        settings:
          $ref: '#/components/schemas/PayPropSettingsDTO'

    PayPropTenantDTO:
      type: object
      properties:
        account_type:
          type: string
          enum: [individual, business]
          default: individual
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        business_name:
          type: string
          maxLength: 50
        email_address:
          type: string
          format: email
          maxLength: 50
        mobile_number:
          type: string
          maxLength: 15
          pattern: '^[1-9]\d+$'
        phone:
          type: string
          maxLength: 15
        customer_id:
          type: string
          maxLength: 50
        customer_reference:
          type: string
          maxLength: 50
        date_of_birth:
          type: string
          format: date
        id_number:
          type: string
          maxLength: 15
        vat_number:
          type: string
          maxLength: 50
        address:
          $ref: '#/components/schemas/PayPropAddressDTO'
        bank_account:
          $ref: '#/components/schemas/PayPropBankAccountDTO'
        has_bank_account:
          type: boolean

    PayPropBeneficiaryDTO:
      type: object
      properties:
        account_type:
          type: string
          enum: [individual, business]
          default: individual
        payment_method:
          type: string
          enum: [local, international, cheque]
          default: local
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        business_name:
          type: string
          maxLength: 50
        email_address:
          type: string
          format: email
          maxLength: 100
        mobile:
          type: string
          maxLength: 25
        customer_id:
          type: string
          maxLength: 50
        customer_reference:
          type: string
          maxLength: 50
        address:
          $ref: '#/components/schemas/PayPropAddressDTO'
        bank_account:
          $ref: '#/components/schemas/PayPropBankAccountDTO'
        communication_preferences:
          type: object
          properties:
            email:
              type: object
              properties:
                enabled:
                  type: boolean
                  default: true
                payment_advice:
                  type: boolean
                  default: true

    PayPropAddressDTO:
      type: object
      properties:
        address_line_1:
          type: string
          maxLength: 50
        address_line_2:
          type: string
          maxLength: 50
        address_line_3:
          type: string
          maxLength: 50
        city:
          type: string
          maxLength: 50
        state:
          type: string
          maxLength: 50
        postal_code:
          type: string
          maxLength: 10
        country_code:
          type: string
          maxLength: 2
          default: UK

    PayPropBankAccountDTO:
      type: object
      properties:
        account_name:
          type: string
          maxLength: 50
        account_number:
          type: string
        branch_code:
          type: string
        bank_name:
          type: string
          maxLength: 50
        branch_name:
          type: string
          maxLength: 50
        iban:
          type: string
          maxLength: 34
        swift_code:
          type: string
          maxLength: 11
        country_code:
          type: string
          maxLength: 2

    PayPropSettingsDTO:
      type: object
      required:
        - monthly_payment
      properties:
        enable_payments:
          type: boolean
          default: true
        hold_owner_funds:
          type: boolean
          default: false
        monthly_payment:
          type: number
          minimum: 0
        minimum_balance:
          type: number
          default: 0
        listing_from:
          type: string
          format: date
        listing_to:
          type: string
          format: date

    PayPropTagDTO:
      type: object
      required:
        - name
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 32
        description:
          type: string
        color:
          type: string

    SouthAfricanIDCreditCheck:
      type: object
      required:
        - identity_type
        - tenant_id
        - property_id
        - first_name
        - last_name
        - monthly_rent
        - net_monthly_income
        - id_number
      properties:
        identity_type:
          type: string
          enum: [south_african_id]
        tenant_id:
          type: string
        property_id:
          type: string
        first_name:
          type: string
          maxLength: 35
        last_name:
          type: string
          maxLength: 35
        monthly_rent:
          type: number
          minimum: 10
          maximum: 1000000
        net_monthly_income:
          type: number
          minimum: 1000
          maximum: 1000000
        id_number:
          type: string
          minLength: 13
          maxLength: 13
          pattern: '^\d+$'
        email:
          type: string
          format: email
          maxLength: 50
        mobile_number:
          type: string
          maxLength: 15

    PassportCreditCheck:
      type: object
      required:
        - identity_type
        - tenant_id
        - property_id
        - first_name
        - last_name
        - monthly_rent
        - net_monthly_income
        - gender
        - date_of_birth
        - passport_number
        - passport_country
      properties:
        identity_type:
          type: string
          enum: [passport]
        tenant_id:
          type: string
        property_id:
          type: string
        first_name:
          type: string
          maxLength: 35
        last_name:
          type: string
          maxLength: 35
        monthly_rent:
          type: number
        net_monthly_income:
          type: number
        gender:
          type: string
          enum: [male, female]
        date_of_birth:
          type: string
          format: date
        passport_number:
          type: string
          minLength: 3
          maxLength: 17
        passport_country:
          type: string
          minLength: 2
          maxLength: 2
          pattern: '^[A-Z]{2}$'

    BusinessCreditCheck:
      type: object
      required:
        - identity_type
        - tenant_id
        - property_id
        - business_name
        - registration_number
        - monthly_rent
        - net_monthly_income
      properties:
        identity_type:
          type: string
          enum: [business]
        tenant_id:
          type: string
        property_id:
          type: string
        business_name:
          type: string
          minLength: 4
          maxLength: 35
        registration_number:
          type: string
          minLength: 6
          maxLength: 50
          pattern: '^\d{2,}/\d{4,}/\d{2,}$'
        monthly_rent:
          type: number
        net_monthly_income:
          type: number

    Pagination:
      type: object
      properties:
        page:
          type: integer
        rows:
          type: integer
        total_rows:
          type: integer
        total_pages:
          type: integer

  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://ukapi.staging.payprop.com/oauth/authorize
          tokenUrl: https://ukapi.staging.payprop.com/oauth/access_token
          scopes:
            read:export:beneficiaries: Read beneficiary export data
            read:export:tenants: Read tenant export data
            read:export:properties: Read property export data
            write:entity:tenant: Create and update tenants
            write:entity:property: Create and update properties
            write:entity:beneficiary: Create and update beneficiaries

security:
  - OAuth2: []