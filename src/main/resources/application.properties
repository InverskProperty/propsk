# RENDER DEPLOYMENT - FIXED CONFIG TO USE YOUR ENVIRONMENT VARIABLES

# Database - Railway MySQL
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA - Minimal settings
spring.jpa.hibernate.ddl-auto=none
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.show-sql=false
spring.sql.init.mode=never

# Server - NO context path (runs at root)
server.port=${PORT:8080}
# server.servlet.context-path=/hub  ‚Üê REMOVED

# Google OAuth Configuration - ENABLED
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=openid,email,profile,https://www.googleapis.com/auth/gmail.send,https://www.googleapis.com/auth/drive,https://www.googleapis.com/auth/spreadsheets

# Weather API Configuration - ENABLED
weather.api.url=http://api.weatherapi.com/v1/current.json
weather.api.key=${WEATHER_API_KEY}

# Company Configuration
company.name=${COMPANY_NAME}
app.base-url=${APP_BASE_URL:https://spoutproperty-hub.onrender.com}

# PayProp Configuration - USING YOUR ENVIRONMENT VARIABLES
payprop.enabled=${PAYPROP_ENABLED:false}
payprop.api.base-url=${PAYPROP_API_BASE_URL:https://ukapi.staging.payprop.com/api/agency/v1.1}
payprop.api.key=dummy_api_key_12345
payprop.webhook.url=https://spoutproperty-hub.onrender.com/api/webhooks/payprop
payprop.webhook.secret=${PAYPROP_WEBHOOK_SECRET:dummy_secret_key_12345}
payprop.webhook.enabled=${PAYPROP_WEBHOOK_ENABLED:false}
payprop.sync.pull-tags-on-startup=false
payprop.sync.auto-create-portfolios=false
portfolio.auto-sync.enabled=${PORTFOLIO_AUTO_SYNC_ENABLED:false}

spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.leak-detection-threshold=60000

# PayProp OAuth2 Configuration - USING YOUR ENVIRONMENT VARIABLES
payprop.oauth2.client-id=${PAYPROP_CLIENT_ID:dummy_client_id}
payprop.oauth2.client-secret=${PAYPROP_CLIENT_SECRET:dummy_client_secret}
payprop.oauth2.authorization-url=${PAYPROP_AUTH_URL:https://ukapi.staging.payprop.com/oauth/authorize}
payprop.oauth2.token-url=${PAYPROP_TOKEN_URL:https://ukapi.staging.payprop.com/oauth/access_token}
payprop.oauth2.redirect-uri=${PAYPROP_REDIRECT_URI:https://spoutproperty-hub.onrender.com/api/payprop/oauth/callback}
payprop.oauth2.scopes=${PAYPROP_SCOPES:read write}

# =====================================
# OAuth2 ENHANCEMENTS - ADD THESE TO YOUR EXISTING application.properties
# =====================================

# Enhanced Google Provider Configuration for Better Refresh Token Handling
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth?access_type=offline&prompt=consent
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs

# Your existing Google OAuth2 configuration should remain the same:
# spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
# spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
# (Don't change these - they're already set from your environment variables)

# Enhanced OAuth2 Registration Properties
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code

# Force consent screen to ensure refresh tokens are provided
spring.security.oauth2.client.registration.google.client-name=Google

# Add these lines to completely disable scheduling
spring.task.scheduling.enabled=false
spring.scheduling.enabled=false

# PayProp Two-Way Sync Configuration
payprop.sync.batch-size=10
payprop.sync.parallel-enabled=false
payprop.sync.auto-retry=true
payprop.sync.retry-attempts=3

# Conflict Resolution
payprop.conflict.resolution.strategy=FIELD_AUTHORITY
payprop.conflict.payprop-authority-fields=monthly_payment,enable_payments,deposit_amount,listing_from,listing_to
payprop.conflict.crm-authority-fields=customer_type,entity_type,entity_id,portfolio_id,block_id

# Optional: Scheduling
payprop.scheduler.enabled=false
payprop.scheduler.full-sync-cron=0 0 2 * * ?
payprop.scheduler.intelligent-sync-cron=0 */30 * * * ?

# Database connection limits
spring.datasource.hikari.maximum-pool-size=3
spring.datasource.hikari.connection-timeout=10000

# Minimal logging
logging.level.root=WARN

# PayProp specific logging (using your environment variables)
logging.level.site.easy.to.build.crm.service.payprop=${PAYPROP_LOG_LEVEL:WARN}
logging.level.org.springframework.security.oauth2=${OAUTH2_LOG_LEVEL:WARN}
logging.level.org.apache.http=${HTTP_CLIENT_LOG_LEVEL:WARN}

# =====================================
# GOOGLE DRIVE & SHEETS INTEGRATION
# =====================================

# Google Drive Configuration
google.drive.application-name=CRM Property Management
google.drive.folder.root=CRM Files
google.drive.folder.customers=Customers
google.drive.folder.properties=Properties
google.drive.folder.payprop=PayProp Sync
google.drive.folder.statements=Statements
google.drive.folder.documents=Documents
google.drive.folder.maintenance=Maintenance
google.drive.folder.tenants=Tenants
google.drive.folder.contractors=Contractors

# Google Sheets Configuration
google.sheets.application-name=CRM Property Management
google.sheets.default-spreadsheet-name=CRM Data Export
google.sheets.auto-create-folders=true
google.sheets.backup-enabled=true

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.enabled=true

# File Sync Configuration
payprop.file-sync.enabled=${PAYPROP_FILE_SYNC_ENABLED:true}
payprop.file-sync.batch-size=25
payprop.file-sync.auto-organize=true
payprop.file-sync.duplicate-check=true
payprop.file-sync.supported-types=pdf,doc,docx,xls,xlsx,png,jpg,jpeg,gif,txt,csv

# Drive Organization Configuration
drive.organization.auto-create-structure=true
drive.organization.customer-folders=true
drive.organization.property-folders=true
drive.organization.payprop-integration=true
drive.organization.backup-enabled=true

# Statement Generation Configuration
statements.auto-generate=true
statements.format=pdf
statements.include-attachments=true
statements.owner-statements=true
statements.tenant-statements=false