# Production Environment Configuration
# This configuration is used when SPRING_PROFILES_ACTIVE=production

# ===== SPRING PROFILE =====
spring.profiles.active=production

# ===== DATABASE CONFIGURATION =====
# Production Railway MySQL Database
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Settings for production - CONSERVATIVE
spring.jpa.hibernate.ddl-auto=validate
spring.sql.init.mode=never
spring.jpa.show-sql=false
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# Connection Pool Settings - Production optimized
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
# Leak detection threshold - PayProp sync operations can take several minutes
spring.datasource.hikari.leak-detection-threshold=300000

# ===== PAYPROP INTEGRATION =====
# Production PayProp API credentials
payprop.oauth.client-id=${PAYPROP_OAUTH_CLIENT_ID}
payprop.oauth.client-secret=${PAYPROP_OAUTH_CLIENT_SECRET}
payprop.oauth.redirect-uri=${PAYPROP_OAUTH_REDIRECT_URI}

# PayProp API Configuration
payprop.api.base-url=https://api.payprop.com
payprop.api.version=v1
payprop.api.timeout=30000

# ===== GOOGLE OAUTH CONFIGURATION =====
# Production Google OAuth credentials
spring.security.oauth2.client.registration.google.client-id=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_REDIRECT_URI}

# Google OAuth Scopes
spring.security.oauth2.client.registration.google.scope=openid,email,profile,https://www.googleapis.com/auth/gmail.send,https://www.googleapis.com/auth/drive,https://www.googleapis.com/auth/spreadsheets

# Google OAuth Settings
spring.security.oauth2.client.provider.google.authorization-uri-params.access-type=offline
spring.security.oauth2.client.provider.google.authorization-uri-params.prompt=consent
spring.security.oauth2.client.provider.google.authorization-uri-params.include-granted-scopes=true

# ===== APPLICATION SETTINGS =====
# Server Configuration
server.port=${SERVER_PORT:8080}
server.servlet.context-path=/

# Application Settings - Production
crm.data-source=PAYPROP_PRODUCTION
crm.debug-mode=false
crm.financial.sync.test-mode=false

# ===== LOGGING CONFIGURATION =====
# Production logging - less verbose
logging.level.site.easy.to.build.crm=INFO
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.sql=WARN

# Log file configuration
logging.file.name=logs/crm-production.log
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# Log rotation
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.max-history=30
logging.logback.rollingpolicy.total-size-cap=300MB

# ===== SECURITY SETTINGS =====
# JWT Configuration
jwt.secret=${JWT_SECRET}
jwt.expiration=86400000

# Session Configuration - Production
spring.session.timeout=7200
spring.session.store-type=none

# ===== EMAIL CONFIGURATION =====
# SMTP settings for production notifications
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${SPRING_MAIL_USERNAME}
spring.mail.password=${SPRING_MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# ===== PRODUCTION MANAGEMENT =====
# Limited management endpoints for production
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when_authorized
management.endpoint.health.show-components=when_authorized

# Security for management endpoints
management.security.enabled=true

# ===== PRODUCTION FEATURES =====
# API Rate Limiting - enabled for production
api.rate-limit.enabled=true
api.rate-limit.requests-per-minute=60

# File Upload Settings - production limits
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# ===== PAYPROP SYNC CONFIGURATION =====
# Production sync settings - conservative
crm.payprop.sync.batch-size=25
crm.payprop.sync.timeout-minutes=15
crm.payprop.sync.retry-attempts=2
crm.payprop.sync.date-range-days=30

# Production sync safety
crm.payprop.sync.dry-run=false
crm.payprop.sync.validate-data=true
crm.payprop.sync.backup-before-sync=true

# ===== ERROR HANDLING =====
# Production error handling
server.error.whitelabel.enabled=false
server.error.include-message=never
server.error.include-binding-errors=never
server.error.include-stacktrace=never
server.error.include-exception=false

# ===== PERFORMANCE TUNING =====
# JVM settings for production (set in deployment environment)
# -Xms512m -Xmx1024m -XX:+UseG1GC

# Spring Boot Actuator
management.server.port=8081
management.endpoints.web.base-path=/actuator

# ===== CORS CONFIGURATION =====
# Production CORS settings - restrictive
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:https://yourdomain.com}
cors.allowed-methods=GET,POST,PUT,DELETE
cors.allowed-headers=*
cors.allow-credentials=true